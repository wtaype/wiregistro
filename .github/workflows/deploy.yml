name: 🚀 Deploy to Firebase

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🎯 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.5'
          channel: 'stable'
          cache: true

      - name: 🔐 Generate firebase_options.dart
        run: |
          mkdir -p lib
          cat > lib/firebase_options.dart << 'EOF'
          // ignore_for_file: type=lint
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) return web;
              switch (defaultTargetPlatform) {
                case TargetPlatform.android: return android;
                case TargetPlatform.iOS: return ios;
                default: throw UnsupportedError('Platform not supported');
              }
            }

            static const FirebaseOptions web = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            );

            static const FirebaseOptions android = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '1:640789166023:android:e8e0523ca3590a25538be2',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            );

            static const FirebaseOptions ios = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '1:640789166023:ios:6074c410a89c86e2538be2',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              iosBundleId: 'com.example.wiregistro',
            );
          }
          EOF

      - name: 📦 Install & Build
        run: |
          flutter pub get
          flutter build web --release --base-href=/

      - name: 🔥 Deploy to Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --token ${{ secrets.FIREBASE_TOKEN }} --non-interactive

      - name: ✅ Success
        run: |
          echo "🎉 Deploy exitoso!"
          echo "🌐 https://wiregistro.web.app"
          echo "🌐 https://wiregistro.firebaseapp.com"