name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Generate firebase_options.dart
        run: |
          cat > lib/firebase_options.dart << 'EOF'
          // File generated by CI/CD
          // ignore_for_file: type=lint
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart'
              show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              switch (defaultTargetPlatform) {
                case TargetPlatform.android:
                  return android;
                case TargetPlatform.iOS:
                  return ios;
                default:
                  throw UnsupportedError(
                    'DefaultFirebaseOptions are not supported for this platform.',
                  );
              }
            }

            static const FirebaseOptions web = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            );

            static const FirebaseOptions android = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '1:640789166023:android:e8e0523ca3590a25538be2',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            );

            static const FirebaseOptions ios = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              appId: '1:640789166023:ios:6074c410a89c86e2538be2',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              iosBundleId: 'com.example.wiregistro',
            );
          }
          EOF

      - name: Build web
        run: flutter build web --release --base-href=/

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_TOKEN }}'
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}